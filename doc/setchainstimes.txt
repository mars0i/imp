9/2017

Version up to 9/5/2017:

N=300
MBA bytecode:
	tighten both initial mats: 9.1 secs
	calc second lo and hi (i.e. first after initial: 243 secs
MBA native executable:
	tighten: 3.6 secs
	2nd lo, hi: 88.9 secs ~= 1.5 mins
	(only slightly faster with 9/6 version, which is what I expected.)

N=500
MBA native executable:
	tighten: 16.3 secs
	2nd lo, hi: 488.9 secs ~= 8.15 mins

N=1000
MBA native executable:
	tighten: 130.4 secs ~= 2.2 mins
	2nd lo, hi: : 5354 secs ~= 89.2 mins

N=1000
MBP, native executable:
	tighten:  36.25 secs
	calc #2 lo, hi from initial p, q (=#1): 1864.94 secs ~= 31 minutes

(Wow. 30 minutes for one N=1000 iteration with native code on my faster
machine.  Wow.  I wonder if it gets faster as it converges.  Probably
not much.  That means about 24 hours for close to 50 iterations.)

------------

MBA after introducing Parmap:

~/docs/src/ml/imp(master)$ date; time _build/default/src/bin/setchaintest.exe 1000 ; date
Wed Sep  6 23:05:47 CDT 2017
Top level run command: N=1000
make initial interval: 2.463601s
tighten it: 138.793038s
calculate lo2, hi2: 0.219433s
141.477390s

real	50m30.176s
user	90m10.341s
sys	0m34.332s
Wed Sep  6 23:56:17 CDT 2017

