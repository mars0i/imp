==========================
MBA

Bytecode vs. native using unix time on commandline for both:

Using OCaml 4.05.0+flambda
Here's the flags line in src/bin/jbuild:
 (ocamlopt_flags (:standard -O3))

echo bytecode: && time _build/default/src/bin/setchainPDFs.bc -r 3 -c 4 foobytecode 200 100 1 48 1.0 0.95 0.8  0.8 0.95 1.0 && echo native: && time _build/default/src/bin/setchainPDFs.exe -r 3 -c 4 foonative 200 100 1 48 1.0 0.95 0.8  0.8 0.95 1.0

bytecode:
foobytecode01to12.pdf
foobytecode13to24.pdf
foobytecode25to36.pdf
foobytecode37to48.pdf

real	19m37.240s
user	37m46.592s
sys	0m13.259s

native:
foonative01to12.pdf
foonative13to24.pdf
foonative25to36.pdf
foonative37to48.pdf

real	7m8.488s
user	13m39.196s
sys	0m8.535s

native, same thing but fully recompiled with out the ocamlopt_flags
line in jbuild:

real	7m8.068s
user	13m39.250s
sys	0m8.471s

(It's the same!  The ocamlopt_flags has no effect.)

Ah, but I didn't do it right.  Above I had the flags only in the
jbuild in my bin dir.  This time I put in the optimizations in all
three of my jbuild files:

real	6m56.430s
user	12m45.605s
sys	0m10.473s

So that's slightly faster.

And if I use -O2 instead of -O3, it seems to be slightly faster
(though maybe that's just luck and really they are the same):

real	6m49.315s
user	12m57.454s
sys	0m10.363s


BUT NOT QUITE AS FAST AS WITHOUT FLAMBDA:

-------------------
Using ocaml 4.05.0 without flambda, it's a little bit faster:

real	6m47.142s
user	12m54.941s
sys	0m10.864s

(I ran this twice.  Both times were similar.)

---------------------

with flambda not sure what flags. same as above but gens 1 through 72:

real	10m19.268s
user	19m25.846s
sys	0m15.277s



==========================
MBP

Same exec line params as above:

native, 4.05.0, flambda, -O3:
real	0m50.297s
user	5m23.740s
sys	0m4.542s

native, 4.05.0, flambda, -O2:
real	0m50.430s
user	5m23.458s
sys	0m4.506s

Same params except N=400 and initial-freq=200:

native, 4.05.0, flambda, -O3:
real	7m24.016s
user	48m26.646s
sys	0m12.914s

native, 4.05.0, flambda, -O2:
real	7m1.351s
user	46m19.896s
sys	0m11.352s

native, 4.05.0, no flambda:
real	7m15.193s
user	48m3.962s
sys	0m9.115s

(Note I was using the computer on and off during each measurement, so 
that might explain the differences, rather than slight optimization
differences.)
